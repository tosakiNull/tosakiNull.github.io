{"version":3,"sources":["redux/actionType.js","public/publicConst.js","redux/reducers/todo.js","redux/store.js","components/TodoList/Add.js","components/TodoList/CountTab.js","components/TodoList/List.js","components/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","DEL_TODO","COMPLETED_TODO","CHANGE_SHOW_TYPE","ShowType","initState","showType","nowLastId","list","createStore","state","action","type","task","payload","id","completed","delId","copyList","taskId","changeType","connect","dispatch","addTask","props","useState","inputContent","setInputContent","className","value","placeholder","onChange","e","target","onClick","alert","Item","txt","count","changeClick","allCount","Object","keys","length","completedCount","filter","IncompleteCount","onChangeShowType","changeShowType","onDel","onCompleted","completedStyle","checked","newList","map","console","log","delTask","completedTask","itemList","TodoList","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f1591c6.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const DEL_TODO = 'DEL_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const COMPLETED_TODO = 'COMPLETED_TODO';\nexport const CHANGE_SHOW_TYPE = 'CHANGE_SHOW_TYPE';\n","export const ShowType = {\n  ALL: 0,\n  COMPLETED: 1,\n  INCOMPLETE: 2,\n}\n","import { ADD_TODO, DEL_TODO, COMPLETED_TODO, CHANGE_SHOW_TYPE } from '../actionType';\nimport { ShowType } from '../../public/publicConst';\n\nconst initState = {\n  showType: ShowType.ALL,\n  nowLastId: null,\n  list: {},\n}\n\nexport default function todoReducer(state = initState, action) {\n  const { nowLastId, list } = state;\n\n  switch(action.type) {\n    case ADD_TODO:\n      const { task } = action.payload;\n      const id = nowLastId !== null ? nowLastId + 1 : 0;\n\n      return {\n        ...state,\n        nowLastId: id,\n        list: {\n          ...list,\n          [id]: {\n            task,\n            completed: false,\n          }\n        },\n      };\n    case DEL_TODO:\n      const { delId } = action;\n      const copyList = { ...list };\n      delete copyList[delId];\n\n      return {\n        ...state,\n        list: {...copyList},\n      };\n    case COMPLETED_TODO:\n      const { taskId } = action;\n\n      return {\n        ...state,\n        list: {\n          ...list,\n          [taskId]: {\n            ...list[taskId],\n            completed: !list[taskId].completed,\n          }\n        },\n      };\n    case CHANGE_SHOW_TYPE:\n      return {\n        ...state,\n        showType: action.changeType,\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport todoReducer from './reducers/todo';\n\nexport default createStore(todoReducer);\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { ADD_TODO } from '../../redux/actionType';\n\nfunction Add(props) {\n  const { addTask } = props;\n  const [inputContent, setInputContent] = useState('');\n\n  function handleInput(e) {\n    setInputContent(e.target.value);\n  }\n\n  function handleAdd() {\n    if(inputContent === '') {\n      alert('please input content.');\n      return;\n    }\n\n    addTask(inputContent);\n    setInputContent('');\n  }\n\n  return (\n    <div className=\"todo-add\">\n      <input type=\"text\" value={inputContent} placeholder=\"Task\" onChange={handleInput} />\n      <button onClick={handleAdd}>Add</button>\n    </div>\n  );\n}\n\nconst addTask = (task) => ({\n  type: ADD_TODO,\n  payload: {\n    task: task,\n  },\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTask: (task) => dispatch(addTask(task)),\n  dispatch,\n});\n\nexport default connect(null, mapDispatchToProps)(Add);\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { CHANGE_SHOW_TYPE } from '../../redux/actionType';\nimport { ShowType } from '../../public/publicConst';\n\nfunction Item(props) {\n  const { txt, count, changeClick } = props\n\n  return (\n    <div className=\"todo-tab-item\" onClick={changeClick}>\n      <h2>{count}</h2>\n      <span>{txt}</span>\n    </div>\n  );\n}\n\nfunction CountTab(props) {\n  const {\n    allCount,\n    completedCount,\n    IncompleteCount,\n    onChangeShowType,\n  } = props;\n\n  return (\n    <div className=\"todo-tab\">\n      <Item txt=\"All\" count={allCount} changeClick={() => onChangeShowType(ShowType.ALL)} />\n      <Item txt=\"Completed\" count={completedCount} changeClick={() => onChangeShowType(ShowType.COMPLETED)} />\n      <Item txt=\"Incomplete\" count={IncompleteCount} changeClick={() => onChangeShowType(ShowType.INCOMPLETE)} />\n    </div>\n  );\n}\n\nconst changeShowType = (showType) => ({\n  type: CHANGE_SHOW_TYPE,\n  changeType: showType,\n});\n\nconst mapStateToProps = (state) => {\n  const { list } =  state;\n\n  return {\n    allCount: Object.keys(list).length,\n    completedCount: Object.keys(list).filter((id) => list[id].completed).length,\n    IncompleteCount: Object.keys(list).filter((id) => !list[id].completed).length,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeShowType: (showType) => dispatch(changeShowType(showType)),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountTab);\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { DEL_TODO, COMPLETED_TODO } from '../../redux/actionType';\nimport { ShowType } from '../../public/publicConst';\n\nfunction Item(props) {\n  const {\n    task,\n    onDel,\n    completed,\n    onCompleted,\n  } = props;\n\n  const completedStyle = completed ? 'completed' : '';\n\n  return (\n    <div className={`list-item ${completedStyle}`}>\n      <div className=\"check-btn\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={onCompleted}\n        />\n      </div>\n      <div className=\"title\">{task}</div>\n      <div className=\"group-btn\">\n        {/* <button>edit</button> */}\n        <button onClick={onDel}>delete</button>\n      </div>\n    </div>\n  );\n}\n\nfunction List(props) {\n  const { list, delTask, completedTask } = props;\n  const itemList = Object.keys(list).map((id) => (\n    <Item\n      key={id}\n      task={list[id].task}\n      onDel={() => delTask(id)}\n      completed={list[id].completed}\n      onCompleted={() => completedTask(id)}\n    />\n  ))\n\n  return (\n    <div className=\"todo-list\">\n      {itemList}\n    </div>\n  );\n}\n\nconst delTask = (id) => ({\n  type: DEL_TODO,\n  delId: id,\n});\n\nconst completedTask = (id) => ({\n  type: COMPLETED_TODO,\n  taskId: id,\n});\n\nconst mapStateToProps = (state) => {\n  const { list, showType } = state;\n  let newList = { ...list };\n\n  // TODO: 這裏做filter的動作\n  if (showType === ShowType.COMPLETED) {\n    newList = Object.keys(list)\n      .filter((id) => list[id].completed)\n      .map((id) => ({ ...list[id] }));\n  }\n  if (showType === ShowType.INCOMPLETE) {\n    newList = Object.keys(list)\n      .filter((id) => !list[id].completed)\n      .map((id) => ({ ...list[id] }));;\n  }\n\n  console.log(newList);\n\n  return { list: newList };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  delTask: (id) => dispatch(delTask(id)),\n  completedTask: (id) => dispatch(completedTask(id)),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from \"react\";\nimport Add from './Add';\nimport CountTab from './CountTab';\nimport List from './List';\n\nexport default function TodoList() {\n  return (\n    <div className=\"todo-app\">\n      <h1>TodoList</h1>\n      <CountTab />\n      <Add />\n      <List />\n    </div>\n  );\n}\n","import './App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport TodoList from './components/TodoList/TodoList';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}